{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] <= Date.now()) {\n      iziToast.error({\n        title: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      start.setAttribute('disabled', '');\n      return;\n    }\n    userSelectedDate = selectedDates[0];\n    start.removeAttribute('disabled');\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nconst start = document.querySelector('button[data-start]');\nstart.setAttribute('disabled', '');\n\nstart.addEventListener('click', startTime);\nconst timer24 = document.querySelector('.value');\nlet userSelectedDate;\n\nfunction startTime() {\n  start.setAttribute('disabled', '');\n  document.querySelector('#datetime-picker').setAttribute('disabled', '');\n  let intervalId = setInterval(() => {\n    const currentTime = Date.now();\n    const deltaTime = userSelectedDate - currentTime;\n\n    if (deltaTime <= 0) {\n      clearInterval(intervalId);\n      document.querySelector('#datetime-picker').removeAttribute('disabled');\n      start.setAttribute('disabled', '');\n      return;\n    }\n    let ms = convertMs(deltaTime);\n    onTick(ms);\n  }, 1000);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction pad(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction onTick({ days, hours, minutes, seconds }) {\n  document.querySelector('[data-days]').textContent = pad(days);\n  document.querySelector('[data-hours]').textContent = pad(hours);\n  document.querySelector('[data-minutes]').textContent = pad(minutes);\n  document.querySelector('[data-seconds]').textContent = pad(seconds);\n}\n"],"names":["options","selectedDates","iziToast","start","userSelectedDate","flatpickr","startTime","intervalId","currentTime","deltaTime","ms","convertMs","onTick","days","hours","minutes","seconds","pad","value"],"mappings":"+IAMA,MAAMA,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,GAAIA,EAAc,CAAC,GAAK,KAAK,IAAG,EAAI,CAClCC,EAAS,MAAM,CACb,MAAO,qCACP,SAAU,UAClB,CAAO,EACDC,EAAM,aAAa,WAAY,EAAE,EACjC,MACD,CACDC,EAAmBH,EAAc,CAAC,EAClCE,EAAM,gBAAgB,UAAU,CACjC,CACH,EAEAE,EAAU,mBAAoBL,CAAO,EAErC,MAAMG,EAAQ,SAAS,cAAc,oBAAoB,EACzDA,EAAM,aAAa,WAAY,EAAE,EAEjCA,EAAM,iBAAiB,QAASG,CAAS,EACzB,SAAS,cAAc,QAAQ,EAC/C,IAAIF,EAEJ,SAASE,GAAY,CACnBH,EAAM,aAAa,WAAY,EAAE,EACjC,SAAS,cAAc,kBAAkB,EAAE,aAAa,WAAY,EAAE,EACtE,IAAII,EAAa,YAAY,IAAM,CACjC,MAAMC,EAAc,KAAK,MACnBC,EAAYL,EAAmBI,EAErC,GAAIC,GAAa,EAAG,CAClB,cAAcF,CAAU,EACxB,SAAS,cAAc,kBAAkB,EAAE,gBAAgB,UAAU,EACrEJ,EAAM,aAAa,WAAY,EAAE,EACjC,MACD,CACD,IAAIO,EAAKC,EAAUF,CAAS,EAC5BG,EAAOF,CAAE,CACV,EAAE,GAAI,CACT,CAEA,SAASC,EAAUD,EAAI,CAMrB,MAAMG,EAAO,KAAK,MAAMH,EAAK,KAAG,EAC1BI,EAAQ,KAAK,MAAOJ,EAAK,MAAO,IAAI,EACpCK,EAAU,KAAK,MAAQL,EAAK,MAAO,KAAQ,GAAM,EACjDM,EAAU,KAAK,MAASN,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAG,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAIC,EAAO,CAClB,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASN,EAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACjD,SAAS,cAAc,aAAa,EAAE,YAAcC,EAAIJ,CAAI,EAC5D,SAAS,cAAc,cAAc,EAAE,YAAcI,EAAIH,CAAK,EAC9D,SAAS,cAAc,gBAAgB,EAAE,YAAcG,EAAIF,CAAO,EAClE,SAAS,cAAc,gBAAgB,EAAE,YAAcE,EAAID,CAAO,CACpE"}